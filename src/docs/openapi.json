{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "SeedyFiuba API Gateway"
  },
  "tags": [
    {
      "name": "users",
      "description": "Everything about users"
    },
    {
      "name": "projects",
      "description": "Everything about projects"
    },
    {
      "name": "sponsors",
      "description": "Everything about sponsors"
    },
    {
      "name": "viewers",
      "description": "Everything about viewers"
    },
    {
      "name": "admins",
      "description": "Everything about admins"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UserBody"
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns the logged User .",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "A user with the specified ID was not found."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateUserBody"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/{id}/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns profile information of the user specified by id.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to get profile information"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "The specified user ID is invalid (not a number)."
          },
          "404": {
            "description": "A user with the specified ID was not found."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/{id}/projects": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Search projects owned by user with specified id",
        "operationId": "getUserProjects",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user who's projects want to be queried"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "Type of the project to get"
          },
          {
            "in": "query",
            "name": "stage",
            "schema": {
              "type": "string"
            },
            "description": "Stage of the project to get"
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Tags of the project to get",
            "example": [
              "ArbolesParaChaco",
              "ChacoVive"
            ]
          },
          {
            "in": "query",
            "name": "lng",
            "schema": {
              "type": "number"
            },
            "description": "Longitude at which distance should be calculated"
          },
          {
            "in": "query",
            "name": "lat",
            "schema": {
              "type": "number"
            },
            "description": "Longitude at which distance should be calculated"
          },
          {
            "in": "query",
            "name": "dist",
            "schema": {
              "type": "number"
            },
            "description": "Distance from given latitude and longitud of the project to get in kilometers"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResumeProject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified query parameters are invalid."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/projects/mine": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Search projects owned by the logged user",
        "operationId": "getMyProjects",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "Type of the project to get"
          },
          {
            "in": "query",
            "name": "stage",
            "schema": {
              "type": "string"
            },
            "description": "Stage of the project to get"
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Tags of the project to get",
            "example": [
              "ArbolesParaChaco",
              "ChacoVive"
            ]
          },
          {
            "in": "query",
            "name": "lng",
            "schema": {
              "type": "number"
            },
            "description": "Longitude at which distance should be calculated"
          },
          {
            "in": "query",
            "name": "lat",
            "schema": {
              "type": "number"
            },
            "description": "Longitude at which distance should be calculated"
          },
          {
            "in": "query",
            "name": "dist",
            "schema": {
              "type": "number"
            },
            "description": "Distance from given latitude and longitud of the project to get in kilometers"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResumeProject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified query parameters are invalid."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/projects/search": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Search for all projects matching given conditions.",
        "operationId": "searchProject",
        "parameters": [
          {
            "in": "query",
            "name": "ownerid",
            "schema": {
              "type": "string"
            },
            "description": "ID of the user who's projects want to be queried"
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "Type of the project to get"
          },
          {
            "in": "query",
            "name": "stage",
            "schema": {
              "type": "string"
            },
            "description": "Stage of the project to get"
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Tags of the project to get",
            "example": [
              "ArbolesParaChaco",
              "ChacoVive"
            ]
          },
          {
            "in": "query",
            "name": "lng",
            "schema": {
              "type": "number"
            },
            "description": "Longitude at which distance should be calculated"
          },
          {
            "in": "query",
            "name": "lat",
            "schema": {
              "type": "number"
            },
            "description": "Longitude at which distance should be calculated"
          },
          {
            "in": "query",
            "name": "dist",
            "schema": {
              "type": "number"
            },
            "description": "Distance from given latitude and longitud of the project to get in kilometers"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResumeProject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified query parameters are invalid."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Returns project information",
        "description": "Returns full information of the project with given id.",
        "operationId": "viewProject",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Numeric ID of the project to get"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullProject"
                }
              }
            }
          },
          "400": {
            "description": "The specified project ID is invalid (not a number)."
          },
          "404": {
            "description": "A user with the specified ID was not found."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "patch": {
        "tags": [
          "projects"
        ],
        "summary": "Update project",
        "description": "This can only be done by the owner user.",
        "operationId": "updateProject",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Numeric ID of the project to modify"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "example": "Se desea realizar una obra de arte en Chaco, plantando arboles"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullProject"
                }
              }
            }
          },
          "400": {
            "description": "The specified project body information or id is not valid."
          },
          "404": {
            "description": "A project with de specified ID was not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/projects": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create project",
        "description": "This can only be done by the logged in user.",
        "operationId": "createProject",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ProjectBody"
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullProject"
                }
              }
            }
          },
          "400": {
            "description": "The specified project body information is not valid"
          },
          "404": {
            "description": "A user with de specified ID (owneruserid) was not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/wallets/mine": {
      "get": {
        "tags": [
          "wallets"
        ],
        "summary": "List user wallet",
        "operationId": "getUserWallet",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Wallet"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/sponsors/mine": {
      "get": {
        "tags": [
          "sponsors"
        ],
        "summary": "Search projects sponsored by logged user",
        "operationId": "getSponsoredProjects",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResumeProject"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/projects/{id}/sponsors": {
      "post": {
        "tags": [
          "sponsors"
        ],
        "summary": "Sponsor a new project specified by id",
        "operationId": "sponsorNewProject",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the project to sponsor"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResumeProject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified project id is wrong."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/favourites/mine": {
      "get": {
        "tags": [
          "sponsors"
        ],
        "summary": "List logged user favourite projects",
        "operationId": "getFavouriteProjects",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResumeProject"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/projects/{id}/favourites": {
      "post": {
        "tags": [
          "sponsors"
        ],
        "summary": "Project specified by id will be added to logged user favourite list",
        "operationId": "favouritesNewProject",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the project to add to favourites"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResumeProject"
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified project id is wrong."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/viewers": {
      "post": {
        "tags": [
          "viewers"
        ],
        "summary": "Add reviewing capabilities to the logged user",
        "operationId": "addReviewer",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userid": {
                      "type": "string",
                      "example": "1lmoj2LKM10ADS"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/projects/review": {
      "get": {
        "tags": [
          "viewers"
        ],
        "summary": "Returns a list of projects on review state",
        "operationId": "reviewProjectList",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResumeProject"
                  }
                }
              }
            }
          },
          "401": {
            "description": "The user is not a reviewer"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/projects/{id}/review": {
      "post": {
        "tags": [
          "viewers"
        ],
        "summary": "Project specified by id will be reviewed by logged user",
        "operationId": "viewersNewProject",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the project to review"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userid": {
                      "type": "string",
                      "example": "1lmoj2LKM10ADS"
                    },
                    "projectid": {
                      "type": "integer",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified project id is wrong."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/viewers/mine": {
      "get": {
        "tags": [
          "viewers"
        ],
        "summary": "List logged user reviewed projects",
        "operationId": "getReviewedProjects",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of projects to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of projects result to retrieve"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResumeProject"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "admins"
        ],
        "summary": "Returns a list with all the users.",
        "description": "This can only be done by an admin",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of users to retrieve"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "description": "Page number of users result to retrieve"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FullUser"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Logged user is not an admin"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/admin/users/{id}": {
      "get": {
        "tags": [
          "admins"
        ],
        "summary": "Returns profile information of the user specified by id.",
        "description": "This can only be done by an admin",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to get profile information"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullUser"
                }
              }
            }
          },
          "403": {
            "description": "Logged user is not an admin"
          },
          "404": {
            "description": "A user with the specified ID was not found."
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "patch": {
        "tags": [
          "admins"
        ],
        "summary": "Promote a user to administrator",
        "description": "This can only be done by an admin",
        "operationId": "promoteUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to promote"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullUser"
                }
              }
            }
          },
          "403": {
            "description": "Logged user is not an admin"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "05yseyhiEWPNvkYYbdHL77dHKWi1"
          },
          "firstname": {
            "type": "string",
            "example": "Marcelo"
          },
          "lastname": {
            "type": "string",
            "example": "Lopez"
          },
          "email": {
            "type": "string",
            "example": "mlopez@gmail.com"
          },
          "birthdate": {
            "type": "string",
            "example": "1990-03-04"
          },
          "signindate": {
            "type": "string",
            "example": "2021-05-12"
          },
          "isviewer": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "FullUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "05yseyhiEWPNvkYYbdHL77dHKWi1"
          },
          "firstname": {
            "type": "string",
            "example": "Marcelo"
          },
          "lastname": {
            "type": "string",
            "example": "Lopez"
          },
          "email": {
            "type": "string",
            "example": "mlopez@gmail.com"
          },
          "birthdate": {
            "type": "string",
            "example": "1990-03-04"
          },
          "signindate": {
            "type": "string",
            "example": "2021-05-12"
          },
          "isviewer": {
            "type": "boolean",
            "example": true
          },
          "isadmin": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "FullProject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 5
          },
          "ownerid": {
            "type": "string",
            "example": "05yseyhiEWPNvkYYbdHL77dHKWi1"
          },
          "title": {
            "type": "string",
            "example": "10000 Arboles para Chaco"
          },
          "description": {
            "type": "string",
            "example": "Este proyecto busca fondos para crear una obra de arte en Chaco"
          },
          "type": {
            "type": "string",
            "example": "arte"
          },
          "state": {
            "type": "string",
            "example": "funding"
          },
          "actualstage": {
            "type": "integer",
            "example": 0
          },
          "creationdate": {
            "type": "string",
            "example": "2021-03-14"
          },
          "location": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "example": "Chaco, Argentina"
              },
              "lat": {
                "type": "number",
                "example": 120
              },
              "lng": {
                "type": "number",
                "example": 40
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ArbolesParaChaco",
              "ChacoVerde",
              "ChacoVive"
            ]
          },
          "multimedia": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "https://picsum.photos/400/300",
              "https://picsum.photos/400/300",
              "https://picsum.photos/400/300"
            ]
          },
          "stages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "amount": {
                  "type": "integer"
                }
              }
            },
            "example": [
              {
                "title": "Arboles en el sur",
                "description": "Se plantaran 5000 arboles en el sur de Chaco",
                "amount": 2000
              },
              {
                "title": "Arboles en el norte",
                "description": "Se plantaran 5000 arboles en el norte de Chaco",
                "amount": 3000
              }
            ]
          },
          "totalamount": {
            "type": "integer",
            "example": 5000
          },
          "fundedamount": {
            "type": "integer",
            "example": 328
          },
          "sponsorscount": {
            "type": "integer",
            "example": 25
          },
          "favouritescount": {
            "type": "integer",
            "example": 10
          },
          "isfavourite": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ResumeProject": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 5
          },
          "ownerid": {
            "type": "string",
            "example": "05yseyhiEWPNvkYYbdHL77dHKWi1"
          },
          "title": {
            "type": "string",
            "example": "10000 Arboles para Chaco"
          },
          "type": {
            "type": "string",
            "example": "arte"
          },
          "state": {
            "type": "string",
            "example": "funding"
          },
          "location": {
            "type": "string",
            "example": "Chaco, Argentina"
          },
          "icon": {
            "type": "string",
            "example": "https://picsum.photos/400/300"
          }
        }
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "ownerid": {
            "type": "string",
            "example": "05yseyhiEWPNvkYYbdHL77dHKWi1"
          },
          "address": {
            "type": "string",
            "example": "0x7Ab685de2aD2506dBE722934834e3C4800D3c8E4"
          },
          "creationdate": {
            "type": "string",
            "example": "2021-03-14"
          },
          "balance": {
            "type": "string",
            "description": "Balance en ethers",
            "example": "0.0023"
          }
        }
      }
    },
    "requestBodies": {
      "UserBody": {
        "description": "A JSON object containing user information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string",
                  "example": "Marcelo"
                },
                "lastname": {
                  "type": "string",
                  "example": "Lopez"
                },
                "email": {
                  "type": "string",
                  "example": "mlopez@gmail.com"
                },
                "birthdate": {
                  "type": "string",
                  "example": "1990-03-04"
                }
              }
            }
          }
        }
      },
      "UpdateUserBody": {
        "description": "A JSON object containing user information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string",
                  "example": "Marcelo"
                },
                "lastname": {
                  "type": "string",
                  "example": "Lopez"
                }
              }
            }
          }
        }
      },
      "ProjectBody": {
        "description": "A JSON object containing project information",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "10000 Arboles para Chaco"
                },
                "description": {
                  "type": "string",
                  "example": "Este proyecto busca fondos para crear una obra de arte en Chaco"
                },
                "type": {
                  "type": "string",
                  "example": "arte"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "example": "Chaco, Argentina"
                    },
                    "lat": {
                      "type": "number",
                      "example": 120
                    },
                    "lng": {
                      "type": "number",
                      "example": 40
                    }
                  }
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "ArbolesParaChaco",
                    "ChacoVerde",
                    "ChacoVive"
                  ]
                },
                "multimedia": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://picsum.photos/400/300",
                    "https://picsum.photos/400/300",
                    "https://picsum.photos/400/300"
                  ]
                },
                "stages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "amount": {
                        "type": "integer"
                      }
                    }
                  },
                  "example": [
                    {
                      "title": "Arboles en el sur",
                      "description": "Se plantaran 5000 arboles en el sur de Chaco",
                      "amount": 2000
                    },
                    {
                      "title": "Arboles en el norte",
                      "description": "Se plantaran 5000 arboles en el norte de Chaco",
                      "amount": 3000
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}